// <auto-generated />
using EmployeesApp.Infrastructure.Persistance.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeesApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250604124324_Readding of removed stuff")]
    partial class Readdingofremovedstuff
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeesApp.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alfakrull AB"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BSons & Sons"
                        });
                });

            modelBuilder.Entity("EmployeesApp.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 2,
                            Email = "benk@bsons.com",
                            Name = "Benke Benk",
                            Salary = 20000m
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            Email = "bank@bsons.com",
                            Name = "Banke Bank",
                            Salary = 23000m
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            Email = "bonk@bsons.com",
                            Name = "Bonke Bonk",
                            Salary = 19500m
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 1,
                            Email = "alfons@alfakrull.no",
                            Name = "Alfons Alfa",
                            Salary = 43000m
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 1,
                            Email = "albert@alfakrull.no",
                            Name = "Albert Albort",
                            Salary = 49000m
                        });
                });

            modelBuilder.Entity("EmployeesApp.Domain.Entities.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Oslo",
                            CompanyId = 1
                        },
                        new
                        {
                            Id = 2,
                            City = "Borlänge",
                            CompanyId = 2
                        },
                        new
                        {
                            Id = 3,
                            City = "Bredäng",
                            CompanyId = 2
                        });
                });

            modelBuilder.Entity("EmployeesApp.Domain.Entities.Employee", b =>
                {
                    b.HasOne("EmployeesApp.Domain.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EmployeesApp.Domain.Entities.Office", b =>
                {
                    b.HasOne("EmployeesApp.Domain.Entities.Company", "Company")
                        .WithMany("Offices")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EmployeesApp.Domain.Entities.Company", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Offices");
                });
#pragma warning restore 612, 618
        }
    }
}
